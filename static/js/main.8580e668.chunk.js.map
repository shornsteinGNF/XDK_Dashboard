{"version":3,"sources":["components/accelerometer_reference.png","components/RecentDevice.js","components/RecentTime.js","components/RecentValue.js","components/AccelerationReference.js","components/ChartAcceleration.js","components/ChartLine.js","components/CsvExport.js","components/TimeFrameButtons.js","components/Contents.js","components/ResponsiveDrawer.js","App.js","index.js"],"names":["module","exports","RecentDevice","props","state","device","this","Component","RecentTime","isLoading","dataSource","data","data_filtered","filter","row","DeviceId","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","toString","length","timeConverter","TimeStamp","CurrentValue","title","variable","units","SimpleDialog","onClose","open","Dialog","aria-labelledby","DialogTitle","style","textAlign","id","src","require","SimpleDialogDemo","React","useState","setOpen","display","Button","color","minWidth","marginLeft","padding","onClick","fontSize","ChartAcceleration","xdkData","map","time","accel_x","accel_y","accel_z","accel_mag","xdkData_filtered","timeLimit","test","Object","keys","key","paddingBottom","position","width","height","maxHeight","margin","top","right","left","bottom","dataKey","xAxisId","stroke","type","isAnimationActive","wrapperStyle","backgroundColor","border","borderRadius","lineHeight","ChartLine","data_timeConverted","yKey","lineColor","yAxisId","CsvExport","export","dateConverter","day","res","Time","temp","humidity","battery","item","values","unshift","csvContent","e","join","encodedUri","encodeURI","link","document","createElement","setAttribute","now","body","appendChild","click","variant","size","classes","makeStyles","theme","root","flexGrow","paper","spacing","palette","text","secondary","TimeFrameButtons","timeLimitDay","setState","timeLimitWeek","timeLimitMonth","className","Grid","container","marginInlineEnd","xs","md","Paper","Contents","marginBottom","sm","RecentValue","withStyles","ResponsiveDrawer","mobileOpen","ids","handleDrawerToggle","fetch","response","json","responseJson","items","Items","DeviceIds","uniqueDeviceIds","Array","from","Set","console","error","drawer","toolbar","Divider","paddingLeft","List","ListItem","button","ListItemIcon","ListItemText","primary","listItemText","AppBar","appBar","Toolbar","IconButton","aria-label","navIconHide","Typography","noWrap","componentDidMount","Hidden","smUp","Drawer","anchor","direction","drawerPaper","ModalProps","keepMounted","xsDown","implementation","content","zIndex","overflow","breakpoints","up","mixins","drawerContainer","background","default","withTheme","useStyles","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8580e668.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/accelerometer_reference.efb8344c.png\";","import React, { Component } from \"react\";\r\n\r\nclass RecentDevice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      device: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.device === null) {\r\n      return (\r\n        <div>\r\n          <b>Device: </b>None selected\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <b>Device: </b>\r\n          {this.props.device}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default RecentDevice;\r\n","import React, { Component } from \"react\";\r\n\r\nclass RecentTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      dataSource: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    function timeConverter(UNIX_timestamp) {\r\n      var a = new Date(UNIX_timestamp * 1);\r\n      var months = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      var year = a.getFullYear();\r\n      var month = months[a.getMonth()];\r\n      var date = a.getDate();\r\n      var hour = a.getHours();\r\n      var min = a.getMinutes();\r\n      var sec = a.getSeconds();\r\n      if (date.toString().length === 1) {\r\n        date = \"0\" + date;\r\n      }\r\n      if (hour.toString().length === 1) {\r\n        hour = \"0\" + hour;\r\n      }\r\n      if (min.toString().length === 1) {\r\n        min = \"0\" + min;\r\n      }\r\n      if (sec.toString().length === 1) {\r\n        sec = \"0\" + sec;\r\n      }\r\n      var time =\r\n        date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\r\n      return time;\r\n    }\r\n\r\n    if (this.props.data === null) {\r\n      return <i>Last reading:</i>;\r\n    } else {\r\n      let data = this.props.data;\r\n      const data_filtered = data.filter(\r\n        (row) => row.DeviceId === this.props.device\r\n      );\r\n\r\n      if (this.props.device === null) {\r\n        return <i>Last reading:</i>;\r\n      } else {\r\n        return (\r\n          <i>\r\n            Last reading:{\" \"}\r\n            {timeConverter(data_filtered[data_filtered.length - 1].TimeStamp)}\r\n          </i>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default RecentTime;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CurrentValue extends Component {\r\n  render() {\r\n    if (this.props.data === null) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      if (this.props.device === null) {\r\n        return <b>{this.props.title}:</b>;\r\n      } else {\r\n        const data_filtered = this.props.data.filter(\r\n          (row) => row.DeviceId === this.props.device\r\n        );\r\n        return (\r\n          <div>\r\n            <b>{this.props.title}: </b>\r\n            {\r\n              data_filtered[data_filtered.length - 1][\"data\"][\r\n                this.props.variable\r\n              ]\r\n            }\r\n            {this.props.units}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default CurrentValue;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle style={{ textAlign: \"center\" }} id=\"simple-dialog-title\">Acceleration Reference</DialogTitle>\r\n      <img src={require(\"./accelerometer_reference.png\")} />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"inline-flex\" }}>\r\n      <Button  color=\"primary\" style={{ minWidth:0, marginLeft: 10, padding:0 }} onClick={handleClickOpen}>\r\n        <InfoIcon style={{ fontSize:'22px' }} />\r\n      </Button>\r\n      <SimpleDialog open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AccelerationReference from './AccelerationReference'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  LineChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nclass ChartAcceleration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      dataSource: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.data === null) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      let data = this.props.data;\r\n      const data_filtered = data.filter(\r\n        (row) => row.DeviceId === this.props.device\r\n      );\r\n      const xdkData = data_filtered.map((row) => ({\r\n        time: row.TimeStamp,\r\n        accel_x: row.data.accel_x,\r\n        accel_y: row.data.accel_y,\r\n        accel_z: row.data.accel_z,\r\n        accel_mag: row.data.accel_mag,\r\n      }));\r\n      const xdkData_filtered = xdkData.filter(\r\n        (row) => row.time > this.props.timeLimit\r\n      );\r\n      function timeConverter(UNIX_timestamp) {\r\n        var a = new Date(UNIX_timestamp * 1);\r\n        var months = [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\",\r\n          \"Oct\",\r\n          \"Nov\",\r\n          \"Dec\",\r\n        ];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var hour = a.getHours();\r\n        var min = a.getMinutes();\r\n        var sec = a.getSeconds();\r\n        var time =\r\n          date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\r\n        return time;\r\n      }\r\n      const test = Object.keys(xdkData_filtered).map((key) => ({\r\n        time: timeConverter(xdkData_filtered[key].time),\r\n        accel_x: xdkData_filtered[key].accel_x,\r\n        accel_y: xdkData[key].accel_y,\r\n        accel_z: xdkData[key].accel_z,\r\n        accel_mag: xdkData[key].accel_mag,\r\n      }));\r\n      return (\r\n        <div\r\n          style={{\r\n            paddingBottom: \"56%\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              width: \"90%\",\r\n              height: \"90%\",\r\n              maxHeight: \"250px\",\r\n            }}\r\n          >\r\n            {/* <Grid container spacing={12}> */}\r\n            <h3 style={{ textAlign: \"center\" }}>Acceleration <div style={{ display: \"inline-block\", width: 0 }}><AccelerationReference /></div></h3>\r\n            {/* </Grid> */}\r\n            <ResponsiveContainer>\r\n              <LineChart\r\n                data={test}\r\n                margin={{ top: 5, right: 5, left: 5, bottom: 0 }}\r\n              >\r\n                <XAxis dataKey=\"time\" xAxisId={0} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"accel_x\"\r\n                  stroke=\"#ff9800\"\r\n                  isAnimationActive={false}\r\n                />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"accel_y\"\r\n                  stroke=\"#2196f3\"\r\n                  isAnimationActive={false}\r\n                />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"accel_z\"\r\n                  stroke=\"#4caf50\"\r\n                  isAnimationActive={false}\r\n                />\r\n                <Legend\r\n                  width={100}\r\n                  wrapperStyle={{\r\n                    top: -50,\r\n                    right: -15,\r\n                    backgroundColor: \"#f5f5f5\",\r\n                    border: \"1px solid #d5d5d5\",\r\n                    borderRadius: 3,\r\n                    lineHeight: \"10px\",\r\n                  }}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ChartAcceleration;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  LineChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Line,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nclass ChartLine extends Component {\r\n  timeConverter(UNIX_timestamp) {\r\n    var a = new Date(UNIX_timestamp * 1);\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    var sec = a.getSeconds();\r\n    var time =\r\n      date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\r\n    return time;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.data === null) {\r\n      return;\r\n    } else {\r\n      const data_filtered = this.props.data.filter(\r\n        (row) =>\r\n          row.DeviceId === this.props.device &&\r\n          row.TimeStamp > this.props.timeLimit\r\n      );\r\n\r\n      const data_timeConverted = Object.keys(data_filtered).map((key) => ({\r\n        TimeStamp: this.timeConverter(data_filtered[key].TimeStamp),\r\n        data: data_filtered[key].data,\r\n      }));\r\n\r\n      return (\r\n        <div\r\n          style={{\r\n            paddingBottom: \"56%\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              width: \"90%\",\r\n              height: \"90%\",\r\n              maxHeight: \"250px\",\r\n            }}\r\n          >\r\n            <h3 style={{ textAlign: \"center\" }}>{this.props.title}</h3>\r\n            <ResponsiveContainer>\r\n              <LineChart\r\n                data={data_timeConverted}\r\n                margin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n              >\r\n                <XAxis dataKey=\"TimeStamp\" />\r\n                <YAxis dataKey={this.props.yKey} />\r\n                <Tooltip />\r\n                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey={this.props.yKey}\r\n                  stroke={this.props.lineColor}\r\n                  yAxisId={0}\r\n                  isAnimationActive={false}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ChartLine;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport class CsvExport extends Component {\r\n    export = () => {\r\n        const data_filtered = this.props.data.filter(\r\n            (row) =>\r\n              row.DeviceId === this.props.device &&\r\n              row.TimeStamp > this.props.timeLimit\r\n          );\r\n\r\n          function dateConverter(UNIX_timestamp) {\r\n            var a = new Date(UNIX_timestamp * 1);\r\n            var months = [\r\n              \"Jan\",\r\n              \"Feb\",\r\n              \"Mar\",\r\n              \"Apr\",\r\n              \"May\",\r\n              \"Jun\",\r\n              \"Jul\",\r\n              \"Aug\",\r\n              \"Sep\",\r\n              \"Oct\",\r\n              \"Nov\",\r\n              \"Dec\",\r\n            ];\r\n            var year = a.getFullYear();\r\n            var month = months[a.getMonth()];\r\n            var day = a.getDate();\r\n            if (day.toString().length === 1) {\r\n              date = \"0\" + date;\r\n            }\r\n            var date =\r\n              day + \" \" + month + \" \" + year;\r\n            return date;\r\n          }\r\n\r\n          function timeConverter(UNIX_timestamp) {\r\n            var a = new Date(UNIX_timestamp * 1);\r\n            var hour = a.getHours();\r\n            var min = a.getMinutes();\r\n            var sec = a.getSeconds();\r\n            if (hour.toString().length === 1) {\r\n              hour = \"0\" + hour;\r\n            }\r\n            if (min.toString().length === 1) {\r\n              min = \"0\" + min;\r\n            }\r\n            if (sec.toString().length === 1) {\r\n              sec = \"0\" + sec;\r\n            }\r\n            var time =\r\n              hour + \":\" + min + \":\" + sec;\r\n            return time;\r\n          }\r\n\r\n        const arr = data_filtered.map((row) => ({\r\n            Date: dateConverter(row.TimeStamp),\r\n            Time: timeConverter(row.TimeStamp),\r\n            temp: row.data.temp,\r\n            humidity: row.data.humidity,\r\n            accel_x: row.data.accel_x,\r\n            accel_y: row.data.accel_y,\r\n            accel_z: row.data.accel_z,\r\n            battery: row.data.battery,\r\n          }));\r\n\r\n        var headers = ['Date','Time', 'Temperature (C)', \"Humidity (%)\", 'Acceleration_x (milli-g)', 'Acceleration_y (milli-g)', 'Acceleration_z (milli-g)', 'Battery (%)']\r\n        var res = arr.map(function(item) {\r\n            return Object.values(item);\r\n          });\r\n\r\n        res.unshift(headers);\r\n          \r\n        let csvContent = \"data:text/csv;charset=utf-8,\" + res.map(e => e.join(\",\")).join(\"\\n\");\r\n        var encodedUri = encodeURI(csvContent);\r\n        var link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", encodedUri);\r\n        link.setAttribute(\"download\", \"xdk_data_\"+Date.now()+\".csv\");\r\n        document.body.appendChild(link); // Required for FF\r\n        return link.click(); // This will download the data file named \"my_data.csv\".\r\n    }\r\n    \r\n    render() {\r\n        if (this.props.data === null) {\r\n          return;\r\n        } else {\r\n          return (\r\n            <div>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.export}>\r\n              Export\r\n            </Button>\r\n          </div>\r\n          );\r\n        }\r\n      }\r\n}\r\n\r\nexport default CsvExport;","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ChartAcceleration from \"./ChartAcceleration\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ChartLine from \"./ChartLine\";\r\nimport CsvExport from './CsvExport';\r\n\r\nconst dayInMs = 86400000;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst classes = useStyles;\r\n\r\nclass TimeFrameButtons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeLimit: Date.now() - dayInMs,\r\n      device: null,\r\n    };\r\n  }\r\n\r\n  timeLimitDay = () => {\r\n    var currTimestamp = Date.now();\r\n    var time = currTimestamp - dayInMs;\r\n    this.setState({ timeLimit: time });\r\n  };\r\n\r\n  timeLimitWeek = () => {\r\n    var currTimestamp = Date.now();\r\n    var time = currTimestamp - 7 * dayInMs;\r\n    this.setState({ timeLimit: time });\r\n  };\r\n\r\n  timeLimitMonth = () => {\r\n    var currTimestamp = Date.now();\r\n    var time = currTimestamp - 30 * dayInMs;\r\n    this.setState({ timeLimit: time });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={12}>\r\n        <Button\r\n          style={{ marginInlineEnd: \"10px\", backgroundColor: \"White\" }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={this.timeLimitDay}\r\n        >\r\n          1 day\r\n        </Button>\r\n        <Button\r\n          style={{ marginInlineEnd: \"10px\", backgroundColor: \"White\" }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={this.timeLimitWeek}\r\n        >\r\n          1 week\r\n        </Button>\r\n        <Button\r\n          style={{ marginInlineEnd: `calc(100% - 302px)`, backgroundColor: \"White\" }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={this.timeLimitMonth}\r\n        >\r\n          1 month\r\n        </Button>\r\n        <CsvExport\r\n          style={{ textAlign: \"right\" }}\r\n          data={this.props.data}\r\n          timeLimit={this.state.timeLimit}\r\n          device={this.props.device}/>\r\n          </Grid>\r\n        <p></p>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper className={classes.paper} style={{ maxHeight: \"270px\" }}>\r\n              <ChartLine\r\n                title=\"Temperature\"\r\n                yKey=\"data.temp\"\r\n                lineColor=\"#ff9800\"\r\n                data={this.props.data}\r\n                timeLimit={this.state.timeLimit}\r\n                device={this.props.device}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper className={classes.paper} style={{ maxHeight: \"270px\" }}>\r\n              <ChartLine\r\n                title=\"Humidity\"\r\n                yKey=\"data.humidity\"\r\n                lineColor=\"#2196f3\"\r\n                data={this.props.data}\r\n                timeLimit={this.state.timeLimit}\r\n                device={this.props.device}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper className={classes.paper} style={{ maxHeight: \"270px\" }}>\r\n              <ChartAcceleration\r\n                title=\"Acceleration\"\r\n                yKey=\"temp\"\r\n                data={this.props.data}\r\n                timeLimit={this.state.timeLimit}\r\n                device={this.props.device}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper className={classes.paper} style={{ maxHeight: \"270px\" }}>\r\n              <ChartLine\r\n                title=\"Battery\"\r\n                yKey=\"data.battery\"\r\n                lineColor=\"#4caf50\"\r\n                data={this.props.data}\r\n                timeLimit={this.state.timeLimit}\r\n                device={this.props.device}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeFrameButtons;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport RecentDevice from \"./RecentDevice\";\r\nimport RecentTime from \"./RecentTime\";\r\nimport RecentValue from \"./RecentValue\";\r\nimport TimeFrameButtons from \"./TimeFrameButtons\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: 10,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nclass Contents extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      device: null,\r\n    };\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <h2 style={{ marginBottom: \"10px\" }}>Recent</h2>\r\n        <RecentTime data={this.props.data} device={this.props.device} />\r\n        <p></p>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Paper className={classes.paper}>\r\n              <RecentDevice device={this.props.device} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Paper className={classes.paper}>\r\n              <RecentValue\r\n                title=\"Temperature\"\r\n                variable=\"temp\"\r\n                units=\"&#176;C\"\r\n                data={this.props.data}\r\n                device={this.props.device}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Paper className={classes.paper}>\r\n              <RecentValue\r\n                title=\"Humidity\"\r\n                variable=\"humidity\"\r\n                units=\"%\"\r\n                data={this.props.data}\r\n                device={this.props.device}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Paper className={classes.paper}>\r\n              <RecentValue\r\n                title=\"Battery\"\r\n                variable=\"battery\"\r\n                units=\"%\"\r\n                data={this.props.data}\r\n                device={this.props.device}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <h2 style={{ marginBottom: \"10px\" }}>Charts</h2>\r\n        <TimeFrameButtons data={this.props.data} device={this.props.device} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Contents);\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MemoryIcon from \"@material-ui/icons/Memory\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Contents from \"./Contents\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 1,\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n  },\r\n  appBar: {\r\n    position: \"absolute\",\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  navIconHide: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      position: \"relative\",\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n    data: null,\r\n    device: null,\r\n    ids: null,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let response = await fetch(\r\n        \"https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev\"\r\n      );\r\n      let responseJson = await response.json();\r\n      let items = responseJson.body.Items;\r\n      let DeviceIds = items.map((row) => row.DeviceId);\r\n      let uniqueDeviceIds = Array.from(new Set(DeviceIds));\r\n      this.setState(\r\n        {\r\n          data: items,\r\n          ids: uniqueDeviceIds,\r\n        },\r\n        function () {}\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    if (this.state.data == null) {\r\n      return <div>loading...</div>;\r\n    } else {\r\n      const drawer = (\r\n        <div>\r\n          <div className={classes.toolbar} />\r\n          <Divider />\r\n          <h3 style={{ paddingLeft: \"20px\", marginBottom: \"0px\" }}>Devices</h3>\r\n          <List>\r\n            {this.state.ids.map((text) => (\r\n              <ListItem\r\n                button\r\n                onClick={() =>\r\n                  this.setState({ mobileOpen: false, device: text })\r\n                }\r\n                key={text}\r\n              >\r\n                <ListItemIcon>\r\n                  <MemoryIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  classes={{ primary: classes.listItemText }}\r\n                  primary={text}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n      return (\r\n        <div className={classes.root}>\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={this.handleDrawerToggle}\r\n                className={classes.navIconHide}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                XDK Dashboard\r\n              </Typography>\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  this.componentDidMount();\r\n                }}\r\n              >\r\n                <RefreshIcon />\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Hidden smUp>\r\n            <Drawer\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true, // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              open\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            <Contents data={this.state.data} device={this.state.device} />\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport ResponsiveDrawer from \"./components/ResponsiveDrawer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ResponsiveDrawer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}