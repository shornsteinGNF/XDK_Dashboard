{"version":3,"sources":["ChartAcceleration.js","CurrentDevice.js","ChartBattery.js","CurrentBattery.js","ChartHumidity.js","ChartTemp.js","CurrentHumidity.js","CurrentTemp.js","RecentTime.js","LineChart.js","TimeFrameButtons.js","CurrentValue.js","Contents.js","ClippedDrawer.js","ClippedDrawer_old.js","ResponsiveDrawer.js","ResponsiveDrawer_orig.js","App.js","serviceWorker.js","index.js"],"names":["ChartAcceleration","props","state","isLoading","dataSource","this","data","timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","xdkData","filter","row","DeviceId","device","map","time","TimeStamp","accel_x","accel_y","accel_z","accel_mag","xdkData_filtered","timeLimit","test","Object","keys","key","style","paddingBottom","position","width","height","maxHeight","textAlign","margin","top","right","left","bottom","dataKey","xAxisId","stroke","type","isAnimationActive","wrapperStyle","backgroundColor","border","borderRadius","lineHeight","Component","CurrentValues","RecentTime","data_filtered","date","hour","min","sec","toString","length","Chart","data_timeConverted","title","yKey","lineColor","yAxisId","classes","makeStyles","theme","root","flexGrow","paper","padding","spacing","color","palette","text","secondary","TimeFrameButtons","timeLimitDay","now","setState","timeLimitWeek","timeLimitMonth","className","Button","marginInlineEnd","variant","size","onClick","Grid","container","item","xs","md","Paper","CurrentValue","variable","units","Contents","marginBottom","sm","CurrentDevice","withStyles","ClippedDrawer","ids","fetch","response","json","responseJson","items","body","Items","DeviceIds","uniqueDeviceIds","Array","from","Set","console","error","CssBaseline","AppBar","appBar","Toolbar","Typography","noWrap","componentDidMount","Drawer","drawer","drawerPaper","drawerContainer","List","index","ListItem","button","ListItemIcon","ListItemText","primary","listItemText","content","display","zIndex","flexShrink","overflow","fontSize","ResponsiveDrawer","mobileOpen","handleDrawerToggle","toolbar","Divider","paddingLeft","IconButton","aria-label","navIconHide","Hidden","smUp","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","implementation","React","marginLeft","breakpoints","up","mixins","background","default","unit","withTheme","ResponsiveDrawer_orig","mdUp","smDown","useStyles","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2f26920d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLegend,\r\n\tLine,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n  \r\nclass ChartAcceleration extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet data = this.props.data;\r\n\t\t\tconst data_filtered = data.filter(row => row.DeviceId == this.props.device)\r\n\t\t\tconst xdkData = data_filtered.map(row => (\r\n\t\t\t\t{time: row.TimeStamp, accel_x: row.data.accel_x, accel_y: row.data.accel_y, accel_z: row.data.accel_z, accel_mag: row.data.accel_mag}))\r\n\r\n\t\t\tconst xdkData_filtered = xdkData.filter(row => (\r\n\t\t\t\trow.time > this.props.timeLimit\r\n\t\t\t))\r\n\r\n\t\t\tfunction timeConverter(UNIX_timestamp){\r\n\t\t\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\t\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\t\t\tvar year = a.getFullYear();\r\n\t\t\t\tvar month = months[a.getMonth()];\r\n\t\t\t\tvar date = a.getDate();\r\n\t\t\t\tvar hour = a.getHours();\r\n\t\t\t\tvar min = a.getMinutes();\r\n\t\t\t\tvar sec = a.getSeconds();\r\n\t\t\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\t\t\treturn time;\r\n\t\t\t  }\r\n\r\n\t\t\tconst test = Object.keys(xdkData_filtered).map(key => (\r\n\t\t\t\t{time: timeConverter(xdkData_filtered[key].time), accel_x:xdkData_filtered[key].accel_x, accel_y:xdkData[key].accel_y, accel_z:xdkData[key].accel_z, accel_mag:xdkData[key].accel_mag}\r\n\t\t\t))\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '56%',\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%',\r\n\t\t\t\t\tmaxHeight: '250px',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h3 style={{ textAlign:'center' }} >Acceleration</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<LineChart\r\n\t\t\t\t\tdata={test}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 0 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"time\" xAxisId={0}/>\r\n\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"accel_x\" stroke=\"#ff9800\" isAnimationActive={false}/>\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"accel_y\" stroke=\"#2196f3\" isAnimationActive={false}/>\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"accel_z\" stroke=\"#4caf50\" isAnimationActive={false}/>\r\n\t\t\t\t\t<Legend width={100} wrapperStyle={{ top: -50, right: -15, backgroundColor: '#f5f5f5', border: '1px solid #d5d5d5', borderRadius: 3, lineHeight: '10px' }} />\r\n\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartAcceleration;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass CurrentValues extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  device: null};\r\n\t}\r\n\r\n\trender() {\r\n            return (\r\n\t\t\t\t<div>\r\n                    <b>Device: </b>{this.props.device}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nexport default CurrentValues;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tBarChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tBar,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n  \r\nclass ChartBattery extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\t// async componentDidMount() {\r\n\t// \ttry {\r\n\t// \t\t// const response = await fetch('https://jo3lmalso6.execute-api.us-west-1.amazonaws.com/prod');\r\n\t// \t\tconst response = await fetch('https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev');\r\n\t// \t\tlet responseJson = await response.json();\r\n\t// \t\tthis.setState(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tisLoading: false,\r\n\t// \t\t\t\tdataSource: responseJson\r\n\t// \t\t\t},\r\n\t// \t\t\tfunction() {}\r\n\t// \t\t);\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.error(error);\r\n\t// \t}\r\n\t// }\r\n\r\n\trender() {\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet data = this.props.data;\r\n\t\t\t// let items = dataSource.body.Items\r\n\t\t\t// let data = items.map(a => a);\r\n\t\t\tlet data_device_filter = data.filter(row => row.DeviceId == this.props.device)\r\n\t\t\tconst data_filtered = data_device_filter.filter(row => (\r\n\t\t\t\trow.TimeStamp > this.props.timeLimit\r\n\t\t\t))\r\n\t\t\t\r\n\t\t\tfunction timeConverter(UNIX_timestamp){\r\n\t\t\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\t\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\t\t\tvar year = a.getFullYear();\r\n\t\t\t\tvar month = months[a.getMonth()];\r\n\t\t\t\tvar date = a.getDate();\r\n\t\t\t\tvar hour = a.getHours();\r\n\t\t\t\tvar min = a.getMinutes();\r\n\t\t\t\tvar sec = a.getSeconds();\r\n\t\t\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\t\t\treturn time;\r\n\t\t\t  }\r\n            \r\n              const batteryData = data_filtered.map(row => (\r\n\t\t\t\t{time: timeConverter(row.TimeStamp), battery: row.data.battery}))\r\n\r\n\t\t\treturn (\r\n\t\t\t\t// <ResponsiveContainer width=\"95%\" height={400}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '56%',\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h3>Battery</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<BarChart\r\n\t\t\t\t\tdata={batteryData}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"time\"/>\r\n\t\t\t\t\t<YAxis dataKey=\"battery\" />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Bar dataKey=\"battery\" fill=\"#81c784\"/>\r\n\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartBattery;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass CurrentBattery extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\t// async componentDidMount() {\r\n\t// \ttry {\r\n\t// \t\tconst response = await fetch('https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev');\r\n\t// \t\tlet responseJson = await response.json();\r\n\t// \t\tthis.setState(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tisLoading: false,\r\n\t// \t\t\t\tdataSource: responseJson\r\n\t// \t\t\t},\r\n\t// \t\t\tfunction() {}\r\n\t// \t\t);\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.error(error);\r\n\t// \t}\r\n\t// }\r\n\r\n\trender() {\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet data = this.props.data;\r\n\t\t\t// let items = dataSource.body.Items\r\n\t\t\t// let data = items.map(a => a);\r\n\t\t\tconst batteryData_filtered = data.filter(row => row.DeviceId == this.props.device\r\n\t\t\t\t)\r\n\t\t\t\r\n\t\t\tif (this.props.device == null) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n                    {/* <BatteryFullIcon/> */}\r\n\t\t\t\t\t<b>Battery: </b>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{/* <BatteryFullIcon/> */}\r\n\t\t\t\t\t\t<b>Battery: </b>{batteryData_filtered[batteryData_filtered.length-1].data.battery}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentBattery;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLine,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n  \r\nclass ChartHumidity extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\t// async componentDidMount() {\r\n\t// \ttry {\r\n\t// \t\tconst response = await fetch('https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev');\r\n\t// \t\t// const response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t// \t\tlet responseJson = await response.json();\r\n\t// \t\tthis.setState(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tisLoading: false,\r\n\t// \t\t\t\tdataSource: responseJson\r\n\t// \t\t\t},\r\n\t// \t\t\tfunction() {}\r\n\t// \t\t);\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.error(error);\r\n\t// \t}\r\n\t// }\r\n\r\n\trender() {\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet data = this.props.data;\r\n\t\t\t// let items = dataSource.body.Items\r\n\t\t\t// let data = items.map(a => a);\r\n\t\t\tconst data_filtered = data.filter(row => row.DeviceId == this.props.device)\r\n\t\t\tconst xdkData = data_filtered.map(row => (\r\n\t\t\t\t{time: row.TimeStamp, temp: row.data.temp, humidity: row.data.humidity}))\r\n\t\t\t\r\n\t\t\tconst xdkData_filtered = xdkData.filter(row => row.time > this.props.timeLimit)\r\n\r\n\t\t\tfunction timeConverter(UNIX_timestamp){\r\n\t\t\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\t\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\t\t\tvar year = a.getFullYear();\r\n\t\t\t\tvar month = months[a.getMonth()];\r\n\t\t\t\tvar date = a.getDate();\r\n\t\t\t\tvar hour = a.getHours();\r\n\t\t\t\tvar min = a.getMinutes();\r\n\t\t\t\tvar sec = a.getSeconds();\r\n\t\t\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\t\t\treturn time;\r\n\t\t\t  }\r\n\r\n\t\t\tconst test = Object.keys(xdkData_filtered).map(key => (\r\n\t\t\t\t{time: timeConverter(xdkData_filtered[key].time), humidity:xdkData_filtered[key].humidity}\r\n\t\t\t))\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '56%',\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h3>Humidity</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<LineChart\r\n\t\t\t\t\tdata={test}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"time\"/>\r\n\t\t\t\t\t<YAxis dataKey=\"humidity\" />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#6200EE\" yAxisId={0} />\r\n\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartHumidity;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLine,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n\r\nclass ChartTemp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttimeConverter(UNIX_timestamp){\r\n\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes();\r\n\t\tvar sec = a.getSeconds();\r\n\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\treturn time;\r\n\t  }\r\n\r\n\trender() {\r\n\t\tif (this.props.data === null) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconst data_filtered = this.props.data.filter(row => (\r\n\t\t\t\trow.DeviceId === this.props.device &&\r\n\t\t\t\trow.TimeStamp > this.props.timeLimit\r\n\t\t\t\t));\r\n\t\r\n\t\t\tconst data_timeConverted = Object.keys(data_filtered).map(key => (\r\n\t\t\t\t{TimeStamp: this.timeConverter(data_filtered[key].TimeStamp), temp:data_filtered[key].data.temp}\r\n\t\t\t))\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '56%', /* 16:9 */\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>Temperature</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<LineChart\r\n\t\t\t\t\tdata={data_timeConverted}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"TimeStamp\" />\r\n\t\t\t\t\t{/* <YAxis dataKey=\"temp\" label='degrees Celsius' /> */}\r\n\t\t\t\t\t<YAxis dataKey=\"temp\" />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"temp\" stroke=\"#ff7300\" yAxisId={0} />\r\n\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartTemp;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass CurrentHumidity extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tif (this.props.device == null) {\r\n\t\t\t\treturn (<b>Humidity:</b>);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst data_filtered = this.props.data.filter(row => row.DeviceId == this.props.device)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<b>Humidity: </b>{data_filtered[data_filtered.length-1].data.humidity}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentHumidity;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass CurrentTemp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\t// async componentDidMount() {\r\n\t// \ttry {\r\n\t// \t\tconst response = await fetch('https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev');\r\n\t// \t\tlet responseJson = await response.json();\r\n\t// \t\tthis.setState(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tisLoading: false,\r\n\t// \t\t\t\tdataSource: responseJson\r\n\t// \t\t\t},\r\n\t// \t\t\tfunction() {}\r\n\t// \t\t);\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.error(error);\r\n\t// \t}\r\n\t// }\r\n\r\n\trender() {\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet data = this.props.data;\r\n\t\t\t// let items = dataSource.body.Items\r\n\t\t\t// let data = items.map(a => a);\r\n\t\t\tconst tempData_filtered = data.filter(row => row.DeviceId == this.props.device\r\n\t\t\t\t)\r\n\t\t\tif (this.props.device == null) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n                  {/* <AcUnitIcon/>  */}\r\n\t\t\t\t  <b>Temperature: </b> \r\n\t\t\t\t  \r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t{/* <AcUnitIcon/>  */}\r\n\t\t\t\t<b>Temperature: </b> \r\n\t\t\t\t{tempData_filtered[tempData_filtered.length-1].data.temp}&#176;C\r\n\t\t\t  </div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentTemp;","import React, { Component } from 'react';\r\nimport './App.css';\r\nclass RecentTime extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\t// async componentDidMount() {\r\n\t// \ttry {\r\n\t// \t\tconst response = await fetch('https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev');\r\n\t// \t\tlet responseJson = await response.json();\r\n\t// \t\tthis.setState(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tisLoading: false,\r\n\t// \t\t\t\tdataSource: responseJson\r\n\t// \t\t\t},\r\n\t// \t\t\tfunction() {}\r\n\t// \t\t);\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.error(error);\r\n\t// \t}\r\n    // }\r\n\r\n\trender() {\r\n\r\n        function timeConverter(UNIX_timestamp){\r\n            var a = new Date(UNIX_timestamp*1);\r\n            var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n            var year = a.getFullYear();\r\n            var month = months[a.getMonth()];\r\n            var date = a.getDate();\r\n            var hour = a.getHours();\r\n            var min = a.getMinutes();\r\n\t\t\tvar sec = a.getSeconds();\r\n\t\t\tif (date.toString().length==1) {date = \"0\" + date}\r\n\t\t\tif (hour.toString().length==1) {hour = \"0\" + hour}\r\n\t\t\tif (min.toString().length==1) {min = \"0\" + min}\r\n\t\t\tif (sec.toString().length==1) {sec = \"0\" + sec}\r\n            var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n            // var time = toString(time)\r\n            return time;\r\n          }\r\n\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <i>Last reading:</i>;\r\n\t\t} else {\r\n\t\t\tlet data = this.props.data\r\n          const data_filtered = data.filter(row => row.DeviceId == this.props.device)\r\n\r\n\t\t\tif (this.props.device == null) {\r\n\t\t\treturn (\r\n                    <i>Last reading:</i>\r\n\t\t\t);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t// <div>\r\n\t\t\t\t\t\t<i>Last reading: {timeConverter(data_filtered[data_filtered.length-1].TimeStamp)}</i>\r\n\t\t\t\t\t// </div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport default RecentTime;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLine,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n\r\nclass Chart extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttimeConverter(UNIX_timestamp){\r\n\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes();\r\n\t\tvar sec = a.getSeconds();\r\n\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\treturn time;\r\n\t  }\r\n\r\n\trender() {\r\n\t\tif (this.props.data === null) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconst data_filtered = this.props.data.filter(row => (\r\n\t\t\t\trow.DeviceId === this.props.device &&\r\n\t\t\t\trow.TimeStamp > this.props.timeLimit\r\n\t\t\t\t));\r\n\t\r\n\t\t\tconst data_timeConverted = Object.keys(data_filtered).map(key => (\r\n\t\t\t\t{TimeStamp: this.timeConverter(data_filtered[key].TimeStamp), data:data_filtered[key].data}\r\n\t\t\t))\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '56%',\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%',\r\n\t\t\t\t\tmaxHeight: '250px',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h3 style={{ textAlign:'center' }} >{this.props.title}</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<LineChart\r\n\t\t\t\t\tdata={data_timeConverted}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"TimeStamp\" />\r\n\t\t\t\t\t<YAxis dataKey={this.props.yKey} />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey={this.props.yKey} stroke={this.props.lineColor} yAxisId={0} isAnimationActive={false}/>\r\n\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default Chart;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Button } from '@material-ui/core';\r\nimport ChartTemp from './ChartTemp';\r\nimport ChartHumidity from './ChartHumidity';\r\nimport ChartAcceleration from './ChartAcceleration';\r\nimport ChartBattery from './ChartBattery';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Chart from './LineChart'\r\nimport { sizing } from '@material-ui/system';\r\n\r\nconst dayInMs = 86400000;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        paper: {\r\n          padding: theme.spacing(2),\r\n          textAlign: 'center',\r\n          color: theme.palette.text.secondary,\r\n        },\r\n      }));\r\n\r\nconst classes = useStyles;\r\n\r\nclass TimeFrameButtons extends Component {\r\n  constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n            timeLimit: 0,\r\n            device: null};\r\n  }\r\n\r\n    timeLimitDay = () => {\r\n          var currTimestamp = Date.now();\r\n          var time = currTimestamp - dayInMs;\r\n          this.setState({ timeLimit: time });\r\n  }\r\n  \r\n    timeLimitWeek = () => {\r\n          var currTimestamp = Date.now();\r\n          var time = currTimestamp - 7*dayInMs;\r\n          this.setState({ timeLimit: time });\r\n  }\r\n  \r\n    timeLimitMonth = () => {\r\n          var currTimestamp = Date.now();\r\n          var timeLimit = currTimestamp - 30*dayInMs;\r\n          this.setState({ timeLimit: timeLimit });\r\n  }\r\n\r\n\trender() {\r\n        return(\r\n                <div className={classes.root}>\r\n                <Button style={{ marginInlineEnd: '10px', backgroundColor:'White' }} variant=\"outlined\" size=\"small\" onClick={ this.timeLimitDay }>1 day</Button>\r\n                <Button style={{ marginInlineEnd: '10px', backgroundColor:'White' }} variant=\"outlined\" size=\"small\" onClick={ this.timeLimitWeek }>1 week</Button>\r\n                <Button style={{ marginInlineEnd: '10px', backgroundColor:'White' }} variant=\"outlined\" size=\"small\" onClick={ this.timeLimitMonth }>1 month</Button>\r\n                <p></p>\r\n                <Grid container spacing={4}>\r\n              <Grid item xs={12} md={6}>\r\n                <Paper className={classes.paper} style={ {maxHeight:'270px' }}>\r\n                    <Chart title=\"Temperature\" yKey=\"data.temp\" lineColor=\"#ff9800\" data={this.props.data} timeLimit={this.state.timeLimit} device={this.props.device}/>\r\n                  </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Paper className={classes.paper} style={ {maxHeight:'270px' }}>\r\n                    <Chart title=\"Humidity\" yKey=\"data.humidity\" lineColor=\"#2196f3\" data={this.props.data} timeLimit={this.state.timeLimit} device={this.props.device}/>\r\n                  </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Paper className={classes.paper} style={ {maxHeight:'270px' }}>\r\n                    <ChartAcceleration title=\"Acceleration\" yKey=\"temp\" data={this.props.data} timeLimit={this.state.timeLimit} device={this.props.device}/>\r\n                  </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Paper className={classes.paper} style={ {maxHeight:'270px' }}>\r\n                    <Chart title=\"Battery\" yKey=\"data.battery\" lineColor=\"#4caf50\" data={this.props.data} timeLimit={this.state.timeLimit} device={this.props.device}/>\r\n                  </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )\r\n\t\t}\r\n\t}\r\n\r\nexport default TimeFrameButtons;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass CurrentValue extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.data == null) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tif (this.props.device == null) {\r\n\t\t\t\treturn (<b>{this.props.title}:</b>);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t    const data_filtered = this.props.data.filter(row => row.DeviceId == this.props.device)\r\n               return (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<b>{this.props.title}: </b>{data_filtered[data_filtered.length-1]['data'][this.props.variable]}{this.props.units}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentValue;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport ChartAcceleration from './ChartAcceleration'\r\nimport ChartBattery from './ChartBattery'\r\nimport CurrentBattery from './CurrentBattery'\r\nimport ChartHumidity from './ChartHumidity'\r\nimport ChartTemp from './ChartTemp'\r\nimport CurrentHumidity from './CurrentHumidity'\r\nimport CurrentTemp from './CurrentTemp'\r\nimport CurrentDevice from './CurrentDevice'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport RecentTime from './RecentTime'\r\nimport TimeFrameButtons from './TimeFrameButtons'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport CurrentValue from './CurrentValue'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(2),\r\n    padding: 10,\r\n    textAlign: 'center',\r\n    // color: theme.palette.text.secondary,\r\n    color: 'Black'\r\n  },\r\n});\r\n\r\nclass Contents extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      device: null};\r\n}\r\n  render () {\r\n    const {classes} = this.props;\r\n    return (\r\n    <div className={classes.root}>\r\n      <h2 style={{ marginBottom: '10px' }} >Recent</h2><RecentTime data={this.props.data} device={this.props.device}/>\r\n      <p></p>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentDevice device={this.props.device}/>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentValue title=\"Temperature\" variable=\"temp\" units=\"&#176;C\" data={this.props.data} device={this.props.device}/>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentValue title=\"Humidity\" variable=\"humidity\" units=\"%\" data={this.props.data} device={this.props.device}/>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentValue title=\"Battery\" variable=\"battery\"  data={this.props.data} device={this.props.device}/>\r\n          </Paper>\r\n        </Grid>\r\n        </Grid>\r\n        {/* <br></br> */}\r\n        <h2 style={{ marginBottom: '10px' }} >Charts</h2>\r\n        <TimeFrameButtons data={this.props.data} device={this.props.device}/>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default withStyles(styles)(Contents);\r\n","import React, { useState, useEffect, Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Contents from './Contents'\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\nimport Button from '@material-ui/core/Button'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    // zIndex: theme.zIndex.drawer + 1,\r\n    zIndex: 2000\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  //   padding: theme.spacing(3),\r\n    padding: 10\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  listItemText: {\r\n    fontSize:'14px',\r\n  },\r\n});\r\n\r\nclass ClippedDrawer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      device: null,\r\n      ids: null,};\r\n}\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let response = await fetch(\r\n        'https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev')\r\n      let responseJson = await response.json();\r\n      let items = responseJson.body.Items;\r\n      let DeviceIds = items.map(row => (\r\n        row.DeviceId\r\n      ));\r\n      let uniqueDeviceIds = Array.from(new Set(DeviceIds));\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n          data: items,\r\n\t\t\t\t\tids: uniqueDeviceIds,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n  }\r\n  \r\nrender() {\r\n  const {classes} = this.props;\r\n    if (this.state.data == null) {\r\n      return(<div>loading...</div>)\r\n    }\r\n    else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                XDK Dashboard\r\n              </Typography>\r\n              <Button color=\"inherit\" variant=\"outlined\" onClick={() => { this.componentDidMount(); }}><RefreshIcon/></Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <Toolbar />\r\n            <div className={classes.drawerContainer}>\r\n              {/* <h4 style={{ textAlign: 'center' }} >Devices</h4> */}\r\n            <List >\r\n        {this.state.ids.map((text, index) => (\r\n          <ListItem button onClick={() => this.setState({device: text})}   key={text}>\r\n            <ListItemIcon><MemoryIcon /></ListItemIcon>\r\n\r\n            {/* <ListItemIcon><MemoryIcon style={{ fontSize: '0.7em' }}/></ListItemIcon> */}\r\n            <ListItemText classes={{ primary:classes.listItemText }} primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n            </div>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            <Contents data={this.state.data} device={this.state.device}/>\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ClippedDrawer);","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Contents from './Contents'\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\nimport Button from '@material-ui/core/Button'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction ClippedDrawer() {\r\n  const classes = useStyles();\r\n  const [data, dataSet] = useState(null);\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      let response = await fetch(\r\n        'https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev')\r\n      let responseJson = await response.json();\r\n      let test = responseJson\r\n      let items = responseJson.body.Items;\r\n      // let items =  data.body.Items;\r\n      let DeviceIds = items.map(row => (\r\n        row.DeviceId\r\n      ));\r\n      let uniqueDeviceIds = Array.from(new Set(DeviceIds));\r\n      // dataSet(responseJson)\r\n      dataSet(uniqueDeviceIds)\r\n    }\r\n\r\n    fetchMyAPI()\r\n  }, []);\r\n\r\n  // console.log(data)\r\n  \r\n  let list = 0\r\n\r\n    if (data == null) {\r\n      return (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                XDK Dashboard\r\n              </Typography>\r\n              <Button color=\"inherit\" variant=\"outlined\" onClick={() => { window.location.reload(); }}><RefreshIcon/></Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <Toolbar />\r\n            <div className={classes.drawerContainer}>\r\n              \r\n            </div>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            <Contents/>\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                XDK Dashboard\r\n              </Typography>\r\n              <Button color=\"inherit\" variant=\"outlined\" onClick={() => { window.location.reload(); }}><RefreshIcon/></Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <Toolbar />\r\n            <div className={classes.drawerContainer}>\r\n            <List>\r\n        {data.map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <MemoryIcon /> : <MemoryIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n              \r\n            </div>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            <Contents/>\r\n          </main>\r\n        </div>\r\n      );\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ClippedDrawer","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';import Contents from './Contents'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // height: 1000,\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  navIconHide: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      position: 'relative',\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing.unit * 3,\r\n    // minHeight: '100%',\r\n\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n    data: null,\r\n    device: null,\r\n    ids: null,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let response = await fetch(\r\n        'https://hx63ml0hmc.execute-api.us-west-1.amazonaws.com/dev')\r\n      let responseJson = await response.json();\r\n      let items = responseJson.body.Items;\r\n      let DeviceIds = items.map(row => (\r\n        row.DeviceId\r\n      ));\r\n      let uniqueDeviceIds = Array.from(new Set(DeviceIds));\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n          data: items,\r\n\t\t\t\t\tids: uniqueDeviceIds,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    if (this.state.data == null) {\r\n        return(<div>loading...</div>)\r\n      }\r\n    else {\r\n        const drawer = (\r\n            <div>\r\n              <div className={classes.toolbar} />\r\n              <Divider />\r\n              <h3 style={{ paddingLeft: '20px' }} >Devices</h3>\r\n              <List >\r\n              {this.state.ids.map((text) => (\r\n                <ListItem button onClick={() => this.setState({mobileOpen: false, device: text})} key={text}>\r\n                  <ListItemIcon><MemoryIcon /></ListItemIcon>\r\n                  <ListItemText classes={{ primary:classes.listItemText }} primary={text} />\r\n              </ListItem>\r\n              ))}\r\n            </List>\r\n            {/* <Divider /> */}\r\n            </div>\r\n          );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.navIconHide}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              XDK Dashboard\r\n            </Typography>\r\n            <Button color=\"inherit\" variant=\"outlined\" onClick={() => { this.componentDidMount(); }}><RefreshIcon/></Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Hidden smUp>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={this.state.mobileOpen}\r\n            onClose={this.handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            open\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar}/>\r\n          <Contents data={this.state.data} device={this.state.device}/>\r\n        </main>\r\n      </div>\r\n    );\r\n        }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import { mailFolderListItems, otherMailFolderListItems } from './tileData';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 430,\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  navIconHide: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      position: 'relative',\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass ResponsiveDrawer_orig extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        {/* <Divider />\r\n        <List>{mailFolderListItems}</List>\r\n        <Divider />\r\n        <List>{otherMailFolderListItems}</List> */}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.navIconHide}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"title\" color=\"inherit\" noWrap>\r\n              Responsive drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Hidden mdUp>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={this.state.mobileOpen}\r\n            onClose={this.handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            open\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Typography noWrap>{'You think water moves fast? You should see ice.'}</Typography>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ResponsiveDrawer.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   theme: PropTypes.object.isRequired,\r\n// };\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer_orig);","import React from 'react';\r\nimport './App.css';\r\nimport ClippedDrawer from './ClippedDrawer'\r\nimport ClippedDrawer_old from './ClippedDrawer_old'\r\nimport ResponsiveDrawer from './ResponsiveDrawer'\r\nimport ResponsiveDrawer_orig from './ResponsiveDrawer_orig'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <ResponsiveDrawer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <Bar />\r\n    <ChartTemp />\r\n    <ChartHumidity />\r\n    <CurrentTemp />\r\n    <CurrentHumidity /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}