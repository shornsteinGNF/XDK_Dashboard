{"version":3,"sources":["logo.svg","Bar.js","ChartAcceleration.js","ChartBattery.js","CurrentBattery.js","ChartHumidity.js","ChartTemp.js","CurrentHumidity.js","CurrentTemp.js","CurrentDevice.js","RecentTime.js","Contents.js","TimeFrameButtons.js","ClippedDrawer.js","CurrentValues.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","flexGrow","marginBottom","spacing","title","ChartAcceleration","props","state","isLoading","dataSource","fetch","response","json","responseJson","this","setState","console","error","timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","xdkData","body","Items","map","row","time","TimeStamp","accel_x","data","accel_y","accel_z","accel_mag","test","Object","keys","key","style","paddingBottom","position","width","height","margin","top","right","left","bottom","dataKey","xAxisId","stroke","type","wrapperStyle","backgroundColor","border","borderRadius","lineHeight","Component","ChartBattery","batteryData","battery","log","fill","CurrentBattery","items","length","ChartHumidity","temp","humidity","yAxisId","ChartTemp","tempData","document","Element","clientHeight","CurrentHumidity","CurrentTemp","CurrentValues","RecentTime","useStyles","paper","padding","textAlign","color","palette","text","secondary","Contents","classes","className","Grid","container","item","xs","Paper","CurrentDevice","Button","display","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","ClippedDrawer","CssBaseline","AppBar","Toolbar","Typography","variant","noWrap","Drawer","List","index","ListItem","button","ListItemIcon","ListItemText","primary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2a4ee553.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            XDK Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLegend,\r\n\tLine,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n  \r\nclass ChartAcceleration extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\t// const response = await fetch('https://jo3lmalso6.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tlet data = items.map(a => a);\r\n\t\t\tconst xdkData = data.map(row => (\r\n\t\t\t\t{time: row.TimeStamp, accel_x: row.data.accel_x, accel_y: row.data.accel_y, accel_z: row.data.accel_z, accel_mag: row.data.accel_mag}))\r\n\r\n\t\t\tfunction timeConverter(UNIX_timestamp){\r\n\t\t\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\t\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\t\t\tvar year = a.getFullYear();\r\n\t\t\t\tvar month = months[a.getMonth()];\r\n\t\t\t\tvar date = a.getDate();\r\n\t\t\t\tvar hour = a.getHours();\r\n\t\t\t\tvar min = a.getMinutes();\r\n\t\t\t\tvar sec = a.getSeconds();\r\n\t\t\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\t\t\treturn time;\r\n\t\t\t  }\r\n\r\n\t\t\tconst test = Object.keys(xdkData).map(key => (\r\n\t\t\t\t{time: timeConverter(xdkData[key].time), accel_x:xdkData[key].accel_x, accel_y:xdkData[key].accel_y, accel_z:xdkData[key].accel_z, accel_mag:xdkData[key].accel_mag}\r\n\t\t\t))\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '100%',\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h3>Acceleration</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<LineChart\r\n\t\t\t\t\tdata={test}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"time\" xAxisId={0}/>\r\n\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"accel_x\" stroke=\"#00e676\"/>\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"accel_y\" stroke=\"#9c27b0\"/>\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"accel_z\" stroke=\"#ffeb3b\"/>\r\n\t\t\t\t\t<Legend width={100} wrapperStyle={{ top: 40, right: 20, backgroundColor: '#f5f5f5', border: '1px solid #d5d5d5', borderRadius: 3, lineHeight: '10px' }} />\r\n\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartAcceleration;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tBarChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tBar,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n  \r\nclass ChartBattery extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\t// const response = await fetch('https://jo3lmalso6.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tlet data = items.map(a => a);\r\n\t\t\t\r\n\r\n\t\t\tfunction timeConverter(UNIX_timestamp){\r\n\t\t\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\t\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\t\t\tvar year = a.getFullYear();\r\n\t\t\t\tvar month = months[a.getMonth()];\r\n\t\t\t\tvar date = a.getDate();\r\n\t\t\t\tvar hour = a.getHours();\r\n\t\t\t\tvar min = a.getMinutes();\r\n\t\t\t\tvar sec = a.getSeconds();\r\n\t\t\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\t\t\t// var time = toString(time)\r\n\t\t\t\treturn time;\r\n\t\t\t  }\r\n            \r\n              const batteryData = data.map(row => (\r\n\t\t\t\t{time: timeConverter(row.TimeStamp), battery: row.data.battery}))\r\n            \r\n            console.log(batteryData)\r\n\r\n\t\t\treturn (\r\n\t\t\t\t// <ResponsiveContainer width=\"95%\" height={400}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '100%',\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h3>Battery</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<BarChart\r\n\t\t\t\t\tdata={batteryData}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 5 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"time\"/>\r\n\t\t\t\t\t<YAxis dataKey=\"battery\" />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Bar dataKey=\"battery\" fill=\"#81c784\"/>\r\n\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartBattery;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull';\r\n\r\nclass CurrentBattery extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tlet data = items.map(a => a);\r\n\t\t\tconsole.log(items);\r\n\t\t\tconsole.log(data)\r\n\t\t\tconst batteryData = data.map(row => ({time: row.TimeStamp, battery: row.data.battery}))\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n                    {/* <BatteryFullIcon/> */}\r\n\t\t\t\t\t<b>Battery: </b>{batteryData[batteryData.length-1].battery}%\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentBattery;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLine,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n  \r\nclass ChartHumidity extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\t// const response = await fetch('https://jo3lmalso6.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tlet data = items.map(a => a);\r\n\t\t\tconst xdkData = data.map(row => (\r\n\t\t\t\t{time: row.TimeStamp, temp: row.data.temp, humidity: row.data.humidity}))\r\n\r\n\t\t\tfunction timeConverter(UNIX_timestamp){\r\n\t\t\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\t\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\t\t\tvar year = a.getFullYear();\r\n\t\t\t\tvar month = months[a.getMonth()];\r\n\t\t\t\tvar date = a.getDate();\r\n\t\t\t\tvar hour = a.getHours();\r\n\t\t\t\tvar min = a.getMinutes();\r\n\t\t\t\tvar sec = a.getSeconds();\r\n\t\t\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\t\t\t// var time = toString(time)\r\n\t\t\t\treturn time;\r\n\t\t\t  }\r\n\r\n\t\t\tconst test = Object.keys(xdkData).map(key => (\r\n\t\t\t\t{time: timeConverter(xdkData[key].time), humidity:xdkData[key].humidity}\r\n\t\t\t))\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '100%',\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h3>Humidity</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<LineChart\r\n\t\t\t\t\tdata={test}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"time\"/>\r\n\t\t\t\t\t<YAxis dataKey=\"humidity\" />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#6200EE\" yAxisId={0} />\r\n\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartHumidity;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLine,\r\n\tLabel,\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\nclass ChartTemp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\t// const response = await fetch('https://jo3lmalso6.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tlet data = items.map(a => a);\r\n\t\t\tconst tempData = data.map(row => ({time: row.TimeStamp, temp: row.data.temp}))\r\n\t\t\t\r\n\t\t\tfunction timeConverter(UNIX_timestamp){\r\n\t\t\t\tvar a = new Date(UNIX_timestamp*1);\r\n\t\t\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\t\t\tvar year = a.getFullYear();\r\n\t\t\t\tvar month = months[a.getMonth()];\r\n\t\t\t\tvar date = a.getDate();\r\n\t\t\t\tvar hour = a.getHours();\r\n\t\t\t\tvar min = a.getMinutes();\r\n\t\t\t\tvar sec = a.getSeconds();\r\n\t\t\t\tvar time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\t\t\t\t// var time = toString(time)\r\n\t\t\t\treturn time;\r\n\t\t\t  }\r\n\r\n\t\t\tconst test = Object.keys(tempData).map(key => (\r\n\t\t\t\t{time: timeConverter(tempData[key].time), temp:tempData[key].temp}\r\n\t\t\t))\r\n\t\t\t\r\n\t\t\tvar element = document\r\n\t\t\tvar intElemClientHeight = Element.clientHeight;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpaddingBottom: '100%', /* 16:9 */\r\n\t\t\t\t\tposition: 'relative'\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '90%',\r\n\t\t\t\t\theight: '90%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>Temperature</h3>\r\n\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<LineChart\r\n\t\t\t\t\tdata={test}\r\n\t\t\t\t\tmargin={{ top: 5, right: 5, left: 5, bottom: 50 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<XAxis dataKey=\"time\" />\r\n\t\t\t\t\t{/* <YAxis dataKey=\"temp\" label='degrees Celsius' /> */}\r\n\t\t\t\t\t<YAxis dataKey=\"temp\" />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"temp\" stroke=\"#ff7300\" yAxisId={0} />\r\n\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default ChartTemp;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport OpacityIcon from '@material-ui/icons/Opacity';\r\n\r\nclass CurrentHumidity extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tlet data = items.map(a => a);\r\n\t\t\tconst xdkData = data.map(row => ({time: row.TimeStamp, temp: row.data.temp, humidity: row.data.humidity}))\r\n\t\t\tconsole.log(xdkData)\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n                    {/* <OpacityIcon/> */}\r\n\t\t\t\t\t<b>Humidity: </b> {xdkData[xdkData.length-1].humidity}%\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentHumidity;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\n\r\nclass CurrentTemp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tlet data = items.map(a => a);\r\n\t\t\tconst tempData = data.map(row => ({time: row.TimeStamp, temp: row.data.temp}))\r\n\t\t\tconsole.log(tempData)\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n                  {/* <AcUnitIcon/>  */}\r\n\t\t\t\t  <b>Temperature: </b> \r\n\t\t\t\t  {tempData[tempData.length-1].temp}&#176;C\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentTemp;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLegend,\r\n\tLine,\r\n\tComposedChart,\r\n\tArea,\r\n\tBar\r\n  } from \"recharts\";\r\nclass CurrentValues extends Component {\r\n\r\n\trender() {\r\n            return (\r\n\t\t\t\t<div>\r\n                    <b>Device: </b>7C-EC-79-D3-68-C3\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nexport default CurrentValues;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLegend,\r\n\tLine,\r\n\tComposedChart,\r\n\tArea,\r\n\tBar\r\n  } from \"recharts\";\r\nclass RecentTime extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n    }\r\n\r\n\trender() {\r\n\r\n        function timeConverter(UNIX_timestamp){\r\n            var a = new Date(UNIX_timestamp*1);\r\n            var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n            var year = a.getFullYear();\r\n            var month = months[a.getMonth()];\r\n            var date = a.getDate();\r\n            var hour = a.getHours();\r\n            var min = a.getMinutes();\r\n            var sec = a.getSeconds();\r\n            var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n            // var time = toString(time)\r\n            return time;\r\n          }\r\n\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tconst data = items.map(row => ({time: row.TimeStamp, temp: row.data.temp, humidity: row.data.humidity, battery: row.data.battery}))\r\n            \r\n            return (\r\n\t\t\t\t// <div>\r\n                    <i>Last reading: {timeConverter(data[data.length-1].time)}</i>\r\n\t\t\t\t// </div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default RecentTime;","import React from 'react';\r\nimport './App.css';\r\nimport ChartAcceleration from './ChartAcceleration'\r\nimport ChartBattery from './ChartBattery'\r\nimport CurrentBattery from './CurrentBattery'\r\nimport ChartHumidity from './ChartHumidity'\r\nimport ChartTemp from './ChartTemp'\r\nimport CurrentHumidity from './CurrentHumidity'\r\nimport CurrentTemp from './CurrentTemp'\r\nimport CurrentDevice from './CurrentDevice'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport RecentTime from './RecentTime'\r\nimport TimeFrameButtons from './TimeFrameButtons'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Contents() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <h2>Recent</h2><RecentTime/>\r\n      <p></p>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentDevice />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentTemp />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentHumidity/>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            <CurrentBattery/>\r\n          </Paper>\r\n        </Grid>\r\n        \r\n        </Grid>\r\n        <br></br>\r\n        {/* <Divider variant=\"middle\" /> */}\r\n        <h2>Charts</h2>\r\n        <Button>1 day</Button>\r\n        <Button>1 week</Button>\r\n        <Button>1 month</Button>\r\n        <p></p>\r\n        <Grid container spacing={4}>\r\n\r\n      {/* </Grid> */}\r\n      <Grid item xs={3}>\r\n        <Paper className={classes.paper}>\r\n          <ChartAcceleration />\r\n        </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <Paper className={classes.paper}>\r\n            <ChartTemp />\r\n        </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <Paper className={classes.paper}>\r\n            <ChartHumidity />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <Paper className={classes.paper}>\r\n            <ChartBattery />\r\n        </Paper>\r\n        </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contents;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass RecentTime extends Component {\r\n\r\n        \r\n\r\n\trender() {\r\n        return(\r\n                <Button>Default</Button>\r\n                // <Button color=\"primary\">Primary</Button>\r\n                // <Button color=\"secondary\">Secondary</Button>\r\n        )\r\n\t\t}\r\n\t}\r\n\r\nexport default RecentTime;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Contents from './Contents'\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\nimport Button from '@material-ui/core/Button'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ClippedDrawer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            XDK Dashboard\r\n          </Typography>\r\n          <Button color=\"inherit\" variant=\"outlined\"><RefreshIcon/></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {['7C-EC-79-D3-68-C3', 'xdk_mosquitto'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <MemoryIcon /> : <MemoryIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <Contents/>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tLineChart,\r\n\tCartesianGrid,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLegend,\r\n\tLine,\r\n\tComposedChart,\r\n\tArea,\r\n\tBar\r\n  } from \"recharts\";\r\nclass CurrentValues extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true,\r\n\t\t\tdataSource: null\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://mt53r15ong.execute-api.us-west-1.amazonaws.com/prod');\r\n\t\t\tlet responseJson = await response.json();\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tdataSource: responseJson\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n    }\r\n\r\n\trender() {\r\n\r\n        function timeConverter(UNIX_timestamp){\r\n            var a = new Date(UNIX_timestamp*1);\r\n            var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n            var year = a.getFullYear();\r\n            var month = months[a.getMonth()];\r\n            var date = a.getDate();\r\n            var hour = a.getHours();\r\n            var min = a.getMinutes();\r\n            var sec = a.getSeconds();\r\n            var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n            // var time = toString(time)\r\n            return time;\r\n          }\r\n\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet { dataSource } = this.state;\r\n\t\t\tlet items = dataSource.body.Items\r\n\t\t\tconst data = items.map(row => ({time: row.TimeStamp, temp: row.data.temp, humidity: row.data.humidity, battery: row.data.battery}))\r\n            \r\n            return (\r\n\t\t\t\t<div>\r\n                    <b>Device: </b>7C-EC-79-D3-68-C3\r\n\t\t\t\t\t<p>\r\n                    <i>Last reading: {timeConverter(data[data.length-1].time)}</i>\r\n\t\t\t\t\t</p>\r\n                {/* <p>Temperature: {data[data.length-1].temp}</p>\r\n                <p>Humidity: {data[data.length-1].humidity}</p>    \r\n                <p>Battery: {data[data.length-1].battery}</p> */}\r\n                    \r\n                    \r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default CurrentValues;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Bar from './Bar'\r\nimport ClippedDrawer from './ClippedDrawer'\r\nimport ChartAcceleration from './ChartAcceleration'\r\nimport ChartHumidity from './ChartHumidity'\r\nimport ChartTemp from './ChartTemp'\r\nimport CurrentValues from './CurrentValues'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Contents from './Contents'\r\nimport {\r\n\tResponsiveContainer\r\n  } from \"recharts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <ClippedDrawer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Bar from './Bar'\nimport ChartTemp from './ChartTemp'\nimport ChartHumidity from './ChartHumidity'\nimport CurrentTemp from './CurrentTemp'\nimport CurrentHumidity from './CurrentHumidity'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Bar />\n    <ChartTemp />\n    <ChartHumidity />\n    <CurrentTemp />\n    <CurrentHumidity /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}